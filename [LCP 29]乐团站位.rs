use std::cmp::min;

/**
Êüê‰πêÂõ¢ÁöÑÊºîÂá∫Âú∫Âú∞ÂèØËßÜ‰Ωú `num * num` ÁöÑ‰∫åÁª¥Áü©Èòµ `grid`ÔºàÂ∑¶‰∏äËßíÂùêÊ†á‰∏∫ `[0,0]`)ÔºåÊØè‰∏™‰ΩçÁΩÆÁ´ôÊúâ‰∏Ä‰ΩçÊàêÂëò„ÄÇ‰πêÂõ¢ÂÖ±Êúâ `9` Áßç‰πêÂô®Ôºå‰πêÂô®Áºñ
Âè∑‰∏∫ `1~9`ÔºåÊØè‰ΩçÊàêÂëòÊåÅÊúâ `1` ‰∏™‰πêÂô®„ÄÇ

‰∏∫‰øùËØÅÂ£∞‰πêÊ∑∑ÂêàÊïàÊûúÔºåÊàêÂëòÁ´ô‰ΩçËßÑÂàô‰∏∫ÔºöËá™ `grid` Â∑¶‰∏äËßíÂºÄÂßãÈ°∫Êó∂ÈíàËû∫ÊóãÂΩ¢ÂêëÂÜÖÂæ™ÁéØ‰ª• `1Ôºå2Ôºå...Ôºå9` Âæ™ÁéØÈáçÂ§çÊéíÂàó„ÄÇ‰æãÂ¶ÇÂΩì num = `5` Êó∂ÔºåÁ´ô
‰ΩçÂ¶ÇÂõæÊâÄÁ§∫

![image.png](https://pic.leetcode-cn.com/1616125411-WOblWH-image.png)

ËØ∑ËøîÂõû‰Ωç‰∫éÂú∫Âú∞ÂùêÊ†á [`Xpos`,`Ypos`] ÁöÑÊàêÂëòÊâÄÊåÅ‰πêÂô®ÁºñÂè∑„ÄÇ

**Á§∫‰æã 1Ôºö**

> ËæìÂÖ•Ôºö`num = 3, Xpos = 0, Ypos = 2`
>
> ËæìÂá∫Ôºö`3`
>
> Ëß£ÈáäÔºö
> ![image.png](https://pic.leetcode-cn.com/1616125437-WUOwsu-image.png)

**Á§∫‰æã 2Ôºö**

> ËæìÂÖ•Ôºö`num = 4, Xpos = 1, Ypos = 2`
>
> ËæìÂá∫Ôºö`5`
>
> Ëß£ÈáäÔºö
> ![image.png](https://pic.leetcode-cn.com/1616125453-IIDpxg-image.png)

**ÊèêÁ§∫Ôºö**
- `1 <= num <= 10^9`
- `0 <= Xpos, Ypos < num`

 Related Topics Êï∞Â≠¶ 
 üëç 69 üëé 0

 */
struct Solution;

//leetcode submit region begin(Prohibit modification and deletion)
impl Solution {
    /// It returns the number of the seat in the orchestra.
    /// 
    /// Arguments:
    /// 
    /// * `num`: the number of rows/columns in the orchestra
    /// * `x_pos`: the x-coordinate of the musician
    /// * `y_pos`: the row number, starting from 0.
    /// 
    /// Returns:
    /// 
    /// The number of the seat in the orchestra.
    pub fn orchestra_layout(num: i32, x_pos: i32, y_pos: i32) -> i32 {
        let num = num as u64;
        let x_pos = x_pos as u64;
        let y_pos = y_pos as u64;
        use std::cmp::min;
        let round = min(min(x_pos, y_pos), min(num - 1 - x_pos, num - 1 - y_pos));
        let mut start = 4 * round * (num - round) % 9 + 1;
        if x_pos == round {
            start += y_pos - round;
        } else if y_pos == num - 1 - round {
            start += num - 1 - 2 * round;
            start += x_pos - round;
        } else if x_pos == num - 1 - round {
            start += 2 * (num - 1 - 2 * round);
            start += num - 1 - round - y_pos;
        } else if y_pos == round {
            start += 3 * (num - 1 - 2 * round);
            start += num - 1 - round - x_pos;
        }
        start %= 9;
        if start != 0 {
            start as i32
        } else {
            9
        }
    }
}

//leetcode submit region end(Prohibit modification and deletion)
fn main() {
    let num = 888888888;
    let x_pos = 111111111;
    let y_pos = 444444444;
    let result = Solution::orchestra_layout(num, x_pos, y_pos);
    println!("result: {}", result);
}